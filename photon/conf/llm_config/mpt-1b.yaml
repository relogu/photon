---
name: mpt-1b
data_local: ./my-copy-c4
data_remote: null  # If blank, files must be present in data_local
max_seq_len: 2048
global_seed: 17
autoresume: false

# Run Name
run_name: ${run_uuid}  # If left blank, will be read from env var $RUN_NAME

# Evaluation gauntlet
eval_gauntlet: ${eval_gauntlet_config.eval_gauntlet}
icl_tasks_config: ${icl_tasks_config}
icl_tasks: ${icl_tasks_config.icl_tasks}

# Model
model:
  name: mpt_causal_lm
  init_device: meta
  d_model: 2048
  n_heads: 16  # Modified 24->16 so that d_head == 128 to satisfy FlashAttention
  n_layers: 24
  expansion_ratio: 4
  max_seq_len: ${llm_config.max_seq_len}
  vocab_size: 50368
  attn_config:
    attn_impl: flash

# Tokenizer
tokenizer:
  name: EleutherAI/gpt-neox-20b
  kwargs:
    model_max_length: ${llm_config.max_seq_len}

# Dataloaders
train_loader:
  name: text
  dataset: ${dataset.train}
  drop_last: true
  num_workers: 8

eval_loader:
  name: text
  dataset: ${dataset.val}
  drop_last: false
  num_workers: 8

# Optimization
scheduler:
  schedulers:
    lr:
      name: cosine_with_warmup
      t_warmup: 100ba
      alpha_f: 0.1
      t_max: ${llm_config.max_duration}

optimizer:
  name: decoupled_adamw
  lr: 2.0e-4
  betas: [0.9, 0.95]
  eps: 1.0e-08
  weight_decay: 0.0

algorithms:
  gradient_clipping:
    clipping_type: norm
    clipping_threshold: 1.0

local_steps: 500ba
max_duration: 24800ba
eval_interval: 500ba
eval_first: false
eval_subset_num_batches: -1
global_train_batch_size: 512

# System
seed: ${llm_config.global_seed}
device_eval_batch_size: 4
device_train_microbatch_size: 4
# device_train_microbatch_size: auto
precision: amp_bf16

# FSDP
fsdp_config:
  sharding_strategy: FULL_SHARD
  mixed_precision: PURE
  activation_checkpointing: true
  activation_checkpointing_reentrant: false
  activation_cpu_offload: false
  limit_all_gathers: true

# Logging
progress_bar: false
log_to_console: true
console_log_interval: 1ba

callbacks:
  speed_monitor:
    window_size: 20
    gpu_flops_available: null
  lr_monitor: {}
  memory_monitor: {}
  runtime_estimator: {}
  activation_monitor_full_model: {interval: 10ba}
  optimizer_monitor: {interval: 10ba, only_global: true}

loggers:
  wandb:
    init_kwargs: ${wandb.setup}
  tensorboard: {flush_interval: 10}

# Checkpoint to local filesystem or remote object store
save_interval: 500ba
save_num_checkpoints_to_keep: 1  # Important, this cleans up checkpoints saved to DISK
save_folder: ./{run_name}/checkpoints
save_overwrite: false

# Load from local filesystem or remote object store
load_path: null
